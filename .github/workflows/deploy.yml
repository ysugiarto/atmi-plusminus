name: ATMI-PlusMinus-Deploy

on:
  pull_request:
    branches:
      - main
  
  push:
    branches:
      - main
      - Laravel-CI/CD


jobs:
  create-deployment-artifacts:
    name: Create Deployment Artifacts
    runs-on: ubuntu-latest
    outputs:
        DEPLOYMENT_MATRIX: ${{ steps.export-deployment-matrix.outputs.DEPLOYMENT_MATRIX }}
    steps:
        -   uses: actions/checkout@v3

        -   name: Compile CSS and Javascript
            run: |
                npm install
                npm run build

        -   name: Install PHP 8.3
            uses: shivammathur/setup-php@master
            with:
                php-version: 8.3
                extensions: mbstring, ctype, fileinfo, openssl, PDO, bcmath, json, tokenizer, xml

        -   name: Install Composer Dependencies
            run: |
                composer install --no-dev --no-interaction --prefer-dist

        -   name: Create Deployment Artifact
            env:
                GITHUB_SHA: ${{ github.sha }}
            run: tar -czf "${GITHUB_SHA}".tar.gz --exclude=*.git --exclude=node_modules --exclude=tests *

        -   name: Store Artifact for Distribution
            uses: actions/upload-artifact@v3
            with:
                name: app-build
                path: ${{ github.sha }}.tar.gz

        -   name: Export Deployment Matrix
            id: export-deployment-matrix
            run: |
                delimiter="$(openssl rand -hex 8)"
                JSON="$(cat ./deployment-config.json)"
                echo "DEPLOYMENT_MATRIX<<${delimiter}" >> "${GITHUB_OUTPUT}"
                echo "$JSON" >> "${GITHUB_OUTPUT}"
                echo "${delimiter}" >> "${GITHUB_OUTPUT}"
                
  prepare-release-on-server:
    name: "${{ matrix.server.name }}: Prepare Release"
    runs-on: ubuntu-latest
    needs: create-deployment-artifacts
    strategy:
        matrix:
          server: ${{ fromJson(needs.create-deployment-artifacts.outputs.DEPLOYMENT_MATRIX) }}
    steps:
        -   uses: actions/download-artifact@v3
            with:
                name: app-build

        -   name: Upload Release
            uses: appleboy/scp-action@master
            with:
                host: ${{ matrix.server.ip }}
                username: ${{ secrets.USER_APP_YSUGIARTO }}
                key: ${{ secrets.SSH_KEY_APP_YSUGIARTO }}
                port: ${{ matrix.server.port }}
                source: ${{ github.sha }}.tar.gz
                target: ${{ matrix.server.path }}/${{ matrix.server.name }}/artifacts
            
        -   name: Extract Archive
            uses: appleboy/ssh-action@master
            with:
                host: ${{ matrix.server.ip }}
                username: ${{ secrets.USER_APP_YSUGIARTO }}
                key: ${{ secrets.SSH_KEY_APP_YSUGIARTO }}
                port: ${{ matrix.server.port }}
                envs: GITHUB_SHA
                script: |
                    mkdir -p "${{ matrix.server.path }}/${{ matrix.server.name }}/releases/${GITHUB_SHA}"
                    tar xzf ${{ matrix.server.path }}/${{ matrix.server.name }}/artifacts/${GITHUB_SHA}.tar.gz -C "${{ matrix.server.path }}/${{ matrix.server.name }}/releases/${GITHUB_SHA}"
                    rm -rf ${{ matrix.server.path }}/${{ matrix.server.name }}/releases/${GITHUB_SHA}/storage

                    mkdir -p ${{ matrix.server.path }}/${{ matrix.server.name }}/storage/{app,public,framework,logs}
                    mkdir -p ${{ matrix.server.path }}/${{ matrix.server.name }}/storage/framework/{cache,sessions,testing,views}
                    chmod -R 0777 ${{ matrix.server.path }}/${{ matrix.server.name }}/storage

  run-before-hooks:
    name: "${{ matrix.server.name }}: Before Hooks"
    runs-on: ubuntu-latest
    needs: [ create-deployment-artifacts, prepare-release-on-server ]
    strategy:
        matrix:
            server: ${{ fromJson(needs.create-deployment-artifacts.outputs.DEPLOYMENT_MATRIX) }}
    steps:
        -   name: Run Before Hooks
            uses: appleboy/ssh-action@master
            env:
                GITHUB_SHA: ${{ github.sha }}
                RELEASE_PATH: ${{ matrix.server.path }}/${{ matrix.server.name }}/releases/${{ github.sha }}
                ACTIVE_RELEASE_PATH: ${{ matrix.server.html-path }}/${{ matrix.server.name }}
                STORAGE_PATH: ${{ matrix.server.path }}/${{ matrix.server.name }}/storage
                BASE_PATH: ${{ matrix.server.path }}/${{ matrix.server.name }}
            with:
                host: ${{ matrix.server.ip }}
                username: ${{ secrets.USER_APP_YSUGIARTO }}
                key: ${{ secrets.SSH_KEY_APP_YSUGIARTO }}
                port: ${{ matrix.server.port }}
                envs: GITHUB_SHA,RELEASE_PATH,ACTIVE_RELEASE_PATH,STORAGE_PATH,BASE_PATH
                script: |
                    ${{ matrix.server.beforeHooks }}

  activate-release:
    name: "${{ matrix.server.name }}: Activate Release"
    runs-on: ubuntu-latest
    needs: [ create-deployment-artifacts, prepare-release-on-server, run-before-hooks ]
    strategy:
        matrix:
            server: ${{ fromJson(needs.create-deployment-artifacts.outputs.DEPLOYMENT_MATRIX) }}
    steps:
        -   name: Activate Release
            uses: appleboy/ssh-action@master
            env:
                GITHUB_SHA: ${{ github.sha }}
                RELEASE_PATH: ${{ matrix.server.path }}/${{ matrix.server.name }}/releases/${{ github.sha }}
                ACTIVE_RELEASE_PATH: ${{ matrix.server.html-path }}/${{ matrix.server.name }}
                STORAGE_PATH: ${{ matrix.server.path }}/${{ matrix.server.name }}/storage
                BASE_PATH: ${{ matrix.server.path }}/${{ matrix.server.name }}
                LARAVEL_ENV: ${{ secrets.LARAVEL_ENV }}
            with:
                host: ${{ matrix.server.ip }}
                username: ${{ secrets.USER_APP_YSUGIARTO }}
                key: ${{ secrets.SSH_KEY_APP_YSUGIARTO }}
                port: ${{ matrix.server.port }}
                envs: GITHUB_SHA,RELEASE_PATH,ACTIVE_RELEASE_PATH,STORAGE_PATH,BASE_PATH,LARAVEL_ENV
                script: |
                    printf "%s" "$LARAVEL_ENV" > "${BASE_PATH}/.env"
                    ln -s -f ${BASE_PATH}/.env $RELEASE_PATH
                    ln -s -f $STORAGE_PATH $RELEASE_PATH
                    ln -s -n -f $RELEASE_PATH $ACTIVE_RELEASE_PATH
                    service php8.3-fpm reload